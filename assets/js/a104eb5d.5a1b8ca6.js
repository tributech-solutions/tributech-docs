"use strict";(self.webpackChunktributech_docs=self.webpackChunktributech_docs||[]).push([[6531],{51134:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>g,default:()=>y,frontMatter:()=>u,metadata:()=>l,toc:()=>p});var i=n(58168),a=(n(96540),n(15680)),r=n(21386);const o='version: "3.6"\n\nservices:\n  source-simulated:\n    image: ${DOCKER_REGISTRY-tributech.azurecr.io/}tributech-source-simulated:${SOURCE_TAG:-latest}\n    depends_on:\n      - mosquitto-server-simulated\n      - tributech-agent\n    environment:\n      - MqttOptions__MQTTHost=mosquitto-server-simulated\n      - Logging__LogLevel__Default=Debug\n    networks:\n      - simulated-net\n    restart: unless-stopped\n    logging:\n      driver: "json-file"\n      options:\n        max-size: "2m"\n        max-file: "5"\n\n  tributech-agent:\n    image: ${DOCKER_REGISTRY-tributech.azurecr.io/}tributech-agent-play:${AGENT_TAG:-latest}\n    depends_on:\n      - mosquitto-server-simulated\n    environment:\n      - Logging__LogLevel__Default=Debug\n      - Logging__Console__FormatterName=simple\n      - MqttOptions__MQTTHost=mosquitto-server-simulated\n      - EdgeDeviceOptions__AgentID=${AGENT_ID:?"The Tributech Agent requires a GUID"}\n      - EdgeDeviceOptions__NodeUrl=${NODE_URL:?"The Tributech Node Url is required"}\n    ports:\n      - "5000:8080"\n    networks:\n      - simulated-net\n    volumes:\n      - ./volumes/simulated/agent/:/app/data # volume mapping for permanent storage of keys and datatwin file\n    restart: unless-stopped\n    logging:\n      driver: "json-file"\n      options:\n        max-size: "2m"\n        max-file: "5"\n\n  mosquitto-server-simulated:\n    image: eclipse-mosquitto:${MQTT_TAG:-1.6}\n    networks:\n      - simulated-net\n    # ports:\n    # - \'1883:1883\' # MQTT\n    # - "127.0.0.1:9001:9001" # web-socket\n    restart: unless-stopped\n\nnetworks:\n  simulated-net:\n\n',s="echo <Client Secret> | docker login --username <Client ID> --password-stdin <Endpoint>\n",c="tributech-agent:\n    ...\n    environment:\n      ...\n      - EdgeDeviceOptions__AgentID=00000000-0000-0000-0000-000000000007\n      - EdgeDeviceOptions__NodeUrl=https://my-environment.tributech-node.com",u={title:"Quickstart",sidebar_position:3},g=void 0,l={unversionedId:"tributech_agent/quickstart",id:"version-4.0.0/tributech_agent/quickstart",title:"Quickstart",description:"In this QuickStart Guide we give a shortened overview on how to setup a Tributech Agent with a Simulated Source and connect it to a Tributech Node to display the random generated data.",source:"@site/versioned_docs/version-4.0.0/tributech_agent/quickstart.mdx",sourceDirName:"tributech_agent",slug:"/tributech_agent/quickstart",permalink:"/tributech_agent/quickstart",draft:!1,editUrl:"https://github.com/tributech-solutions/tributech-dsk-docs/edit/master/versioned_docs/version-4.0.0/tributech_agent/quickstart.mdx",tags:[],version:"4.0.0",sidebarPosition:3,frontMatter:{title:"Quickstart",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Requirements",permalink:"/tributech_agent/requirements"},next:{title:"Setup",permalink:"/tributech_agent/setup"}},d={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Docker-Compose Up",id:"docker-compose-up",level:2},{value:"Activate Agent",id:"activate-agent",level:2},{value:"Source Configuration",id:"source-configuration",level:2},{value:"Verify",id:"verify",level:2}],h={toc:p},m="wrapper";function y(e){let{components:t,...u}=e;return(0,a.yg)(m,(0,i.A)({},h,u,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"In this QuickStart Guide we give a shortened overview on how to setup a Tributech Agent with a ",(0,a.yg)("a",{parentName:"p",href:"/tributech_agent/sources/simulated_source"},"Simulated Source")," and connect it to a Tributech Node to display the random generated data.\nFor a more detailed description on how to setup the Tributech Agent visit ",(0,a.yg)("a",{parentName:"p",href:"/tributech_agent/setup"},"Setup"),"."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"**&quot;Configure Agent**",src:n(97540).A,width:"589",height:"203"})),(0,a.yg)("h2",{id:"requirements"},"Requirements"),(0,a.yg)("p",null,"In Order to link a Tributech Agent to a Tributech node we need the following:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Access to an existing ",(0,a.yg)("a",{parentName:"li",href:"/tributech_node/overview"},"Tributech Node")),(0,a.yg)("li",{parentName:"ul"},"Access to an environment with ",(0,a.yg)("a",{parentName:"li",href:"https://docs.docker.com/compose/"},"Docker Compose"),", which meets the ",(0,a.yg)("a",{parentName:"li",href:"/tributech_agent/requirements"},"Tributech Agent Requirements"))),(0,a.yg)("p",null,"\u26a0\ufe0f We will use different Container Images and configurations in our examples for the quick start compared to the ",(0,a.yg)("a",{parentName:"p",href:"/tributech_agent/setup"},"Setup")," documentation. Please use a new empty folder for the files to prevent any configuration mix up."),(0,a.yg)("h2",{id:"docker-compose-up"},"Docker-Compose Up"),(0,a.yg)("p",null,"We start by setting up the docker-compose environment for the Tributech Agent and Tributech Simulated Source as follows:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("em",{parentName:"strong"},"Authenticate docker"))," to retrieve the relevant docker images from the private ",(0,a.yg)("a",{parentName:"p",href:"/tributech_agent/requirements#docker-login"},"Tributech Docker Registry"),"."),(0,a.yg)(r.A,{className:"bash",title:"terminal",mdxType:"CodeBlock"},s)),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Setup the ",(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("em",{parentName:"strong"},"docker-compose.yml"))," file by creating a ",(0,a.yg)("inlineCode",{parentName:"p"},"docker-compose.yml")," file with the following content (adjustments required):"),(0,a.yg)(r.A,{className:"language-yml",title:"docker-compose.yml",mdxType:"CodeBlock"},o),(0,a.yg)("p",{parentName:"li"},"  Replace the placeholder values for ",(0,a.yg)("inlineCode",{parentName:"p"},"EdgeDeviceOptions__AgentID")," with a ",(0,a.yg)("a",{parentName:"p",href:"https://www.ietf.org/rfc/rfc4122.txt"},"GUID")," for the agent unique Id thats not used by any other agent connected to the Node and the ",(0,a.yg)("inlineCode",{parentName:"p"},"EdgeDeviceOptions__NodeUrl")," points to the ",(0,a.yg)("a",{parentName:"p",href:"/tributech_node/overview"},"Triubtech Node")," Url, for example"),(0,a.yg)(r.A,{className:"language-plain",title:"env specific settings",mdxType:"CodeBlock"},c)),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("em",{parentName:"strong"},"Startup"))," the environment"),(0,a.yg)(r.A,{className:"bash",title:"terminal",mdxType:"CodeBlock"},"docker-compose up -d")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("em",{parentName:"strong"},"Validate"))," that all containers are running. The output should return that every container is in the state ",(0,a.yg)("inlineCode",{parentName:"p"},"Up")),(0,a.yg)(r.A,{className:"bash",title:"terminal",mdxType:"CodeBlock"},"docker compose ps"))),(0,a.yg)("h2",{id:"activate-agent"},"Activate Agent"),(0,a.yg)("p",null,'After starting the Tributech Agent we need to accept the Agent in the Tributech Node in order to receive data. For this we need to go to the Enrollment section of the Tributech Node and search for our agent.\nThe Agent should be in the top most entries of the list and should be in the "Pending" state. Clicking on the ',(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("em",{parentName:"strong"},"Activate"))," button is enough to enrole the agent on the Tributech Node."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"***Activate Tributech Agent***",src:n(2406).A,width:"1918",height:"917"})),(0,a.yg)("h2",{id:"source-configuration"},"Source Configuration"),(0,a.yg)("p",null,"The previous steps established the communication between a Tributech Agent and a Tributech Node. Next we will setup a ",(0,a.yg)("a",{parentName:"p",href:"/tributech_agent/source_integration"},"Tributech Source")," to provide data for the Tributech Agent. The Tributech Agent will then be used to send the data to the Tributech Node. In the following section we complete our Tributech Agent QuickStart Setup by configuring a simple double stream for the ",(0,a.yg)("a",{parentName:"p",href:"/tributech_agent/sources/simulated_source"},"Tributech Simulated Source")," (The Agent name depends on the value of the ",(0,a.yg)("inlineCode",{parentName:"p"},"EdgeDeviceOptions__AgentID")," agent environment variable defined in the previous section)."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"**&quot;Activate Overview**",src:n(6230).A,width:"1723",height:"482"})),(0,a.yg)("p",null,"Next we need to configure the Agent to receive data for the Tributech Simulated Source we defined in the docker-compose setup:"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"**&quot;Configure Agent**",src:n(74120).A,width:"1909",height:"351"})),(0,a.yg)("p",null,"We have prepared a Simulated Source configuration containing a double data stream, save the following ",(0,a.yg)("a",{target:"_blank",href:n(55242).A},"TwinConfiguration Template File")," locally and import it in the Agent Configuration:"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"**&quot;Configure Agent**",src:n(41591).A,width:"494",height:"435"})),(0,a.yg)("p",null,"After successfully importing the ",(0,a.yg)("inlineCode",{parentName:"p"},"TwinConfiguration Template File")," click the ",(0,a.yg)("inlineCode",{parentName:"p"},"APPLY CONFIGURATION")," Button in the top right corner to persist the changes."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"**&quot;Apply configuration**",src:n(12169).A,width:"1911",height:"845"})),(0,a.yg)("p",null,"We can now select the Simulated Stream of our newly configured ",(0,a.yg)("inlineCode",{parentName:"p"},"QuickStart Simulated Source")," Agent"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"**&quot;Select stream**",src:n(63069).A,width:"1735",height:"553"})),(0,a.yg)("p",null,"The Stream generates a new data point between 1 and 10 every second."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"**&quot;QuickStart Stream Data**",src:n(12245).A,width:"1706",height:"776"})),(0,a.yg)("h2",{id:"verify"},"Verify"),(0,a.yg)("p",null,"In order to detect ",(0,a.yg)("a",{parentName:"p",href:"https://www.tributech.io/blog/cybersecurity-threat-data-tampering"},"data tampering")," we provide the possibility to audit each stream proofs individually. We provide the two possibilities to view the audit results:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"A Graph view, which displays pending validation in grey, successful validations in green and failed in red.\n",(0,a.yg)("img",{alt:"***Audit Graph***",src:n(83232).A,width:"1725",height:"741"}))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"A Table view, which includes a list of all proofs. For each proof the validation can be retriggered with a button click or display the history of validations by selecting a table entry.\n",(0,a.yg)("img",{alt:"***Select audit***",src:n(24618).A,width:"1712",height:"781"})),(0,a.yg)("p",{parentName:"li"},"  ",(0,a.yg)("img",{alt:"***Audit overview***",src:n(95983).A,width:"1717",height:"893"})))),(0,a.yg)("p",null,"This completes the QuickStart, for a more detailed guide and information about the audit process visit ",(0,a.yg)("a",{parentName:"p",href:"/tributech_node/agent/verification"},"Stream Verification"),". For more information on how to add other types of Tributech Sources visit ",(0,a.yg)("a",{parentName:"p",href:"/tributech_agent/source_integration"},"Source Integration"),"."))}y.isMDXComponent=!0},55242:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/files/quick-start-bffd239ae4929f85e31cc3cd5e7b32fc.json"},97540:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/EdgeDeviceOverviewFocusAgent-53f6c5140aec85753a266bd3ef5ce7f4.png"},74120:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/node-agent-configure-7ae7cf405f48c53a50f626b64ce56f49.png"},2406:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/node-agent-management-agent-activation-c5faaa13105edce78e88add7ae264405.png"},6230:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/node-agents-overview-01aa04fdd6ed95a0b1b1d5f05da72a2a.png"},83232:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/node-source-audit-graph-a2e89f9e399364db896efcd0bc7a7f26.png"},95983:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/node-source-audit-overview-84a6d4a98dc5392032260e4046179619.png"},41591:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/node-source-import-from-template-e55203f31a9820ec73aa363b1de14baa.png"},12169:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/node-source-quickstart-apply-config-e32b42eacafcbf1afe87e7be626cdb52.png"},63069:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/node-source-quickstart-select-stream-d93056fcd9603cd6d827785a820add96.png"},12245:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/node-source-quickstart-stream-graph-d025b04cd11e17d92ddcef6add0ffc5f.png"},24618:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/node-source-select-audit-6e6e1c7e6ede89ae09f401ff1686a3b7.png"}}]);