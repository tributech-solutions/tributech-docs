"use strict";(self.webpackChunktributech_docs=self.webpackChunktributech_docs||[]).push([[4030],{87946:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return d}});var a=n(83117),o=n(80102),r=(n(67294),n(3905)),s=n(36110),i=["components"],c={title:"OPC UA Source",sidebar_position:1},u=void 0,p={unversionedId:"setup/agent/sources/opc-ua",id:"setup/agent/sources/opc-ua",title:"OPC UA Source",description:"The Tributech OPC UA Source allows to connect to OPC Unified Architecture (UA) based servers for data integration. The OPC UA Source act's as a OPC UA client and forwards the received data for a stream to the Tributech Agent via our MQTT broker.",source:"@site/docs/setup/agent/sources/opc-ua.mdx",sourceDirName:"setup/agent/sources",slug:"/setup/agent/sources/opc-ua",permalink:"/next/setup/agent/sources/opc-ua",draft:!1,editUrl:"https://github.com/tributech-solutions/tributech-dsk-docs/edit/master/docs/setup/agent/sources/opc-ua.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"OPC UA Source",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Requirements",permalink:"/next/setup/agent/requirements"},next:{title:"ADS Source",permalink:"/next/setup/agent/sources/ads"}},l={},d=[{value:"Automated setup",id:"automated-setup",level:2},{value:"Manual setup",id:"manual-setup",level:2}],m={toc:d};function h(e){var t=e.components,c=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,c,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Tributech OPC UA Source allows to connect to ",(0,r.kt)("a",{parentName:"p",href:"https://opcfoundation.org/about/opc-technologies/opc-ua/"},(0,r.kt)("strong",{parentName:"a"},"OPC Unified Architecture (UA)"))," based servers for data integration. The OPC UA Source act's as a OPC UA client and forwards the received data for a stream to the Tributech Agent via our MQTT broker."),(0,r.kt)("h2",{id:"automated-setup"},"Automated setup"),(0,r.kt)("p",null,"During the ",(0,r.kt)("a",{parentName:"p",href:"../docker-compose#agent-automated-setup"},(0,r.kt)("strong",{parentName:"a"},"automated setup"))," of the Tributech Agent you can select to additionally deploy the Tributech OPC UA Source and OPC UA server/simulator for demonstration of such an integration."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Deploy OPC UA source",src:n(53142).Z,width:"1240",height:"1117"})),(0,r.kt)("p",null,"Afterwards you can continue with ",(0,r.kt)("a",{parentName:"p",href:"/next/setup/agent_companion#agent-companion-connect"},(0,r.kt)("strong",{parentName:"a"},"connecting to, linking & configuring"))," the Tributech Edge Agent and the ",(0,r.kt)("a",{parentName:"p",href:"/next/provide_data/iot/opc-ua"},(0,r.kt)("strong",{parentName:"a"},"OPC UA Source")),"."),(0,r.kt)("h2",{id:"manual-setup"},"Manual setup"),(0,r.kt)("p",null,"For the manual setup of the Tributech OPC UA Source (",(0,r.kt)("inlineCode",{parentName:"p"},"opcua-source"),") and an OPC UA server/simulator (",(0,r.kt)("inlineCode",{parentName:"p"},"opcua-server"),") we need the main ",(0,r.kt)("a",{parentName:"p",href:"../docker-compose#agent-manual-setup"},(0,r.kt)("strong",{parentName:"a"},"DSK Edge services"))," as a basis."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Copy the ",(0,r.kt)("a",{target:"_blank",href:n(8688).Z},(0,r.kt)("code",null,"docker-compose.override.yml"))," file.\n(see also ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/extends/#understanding-multiple-compose-files"},(0,r.kt)("strong",{parentName:"a"},"Docker doc - Understanding multiple Compose files")),")"),(0,r.kt)(s.Z,{className:"language-yml",title:"docker-compose.override.yml",mdxType:"CodeBlock"},'version: "3.3"\n\nservices:\n  # DSK OPC-UA Source - Connects to the OPC-UA Server and publishes the values via MQTT to the DSK agent\n  opcua-source:\n    image: ${DOCKER_REGISTRY-tributech.azurecr.io/}opcua-source:${SOURCE_TAG:-latest}\n    depends_on:\n      - mosquitto-server\n      - opcua-server\n      - dsk-agent\n    environment:\n      - Logging__LogLevel__Default=Information\n      - MqttOptions__MQTTHost=mosquitto-server\n      - OPCUASourceOptions__OPCUAServerUrl=opc.tcp://opcua-server:4840/va_tt_demo\n      # use fixed hostname (instead of hostname based on Docker container id) to avoid changing application client certitifcate\n      - OPCUASourceOptions__OverrideHostName=localhost\n      # push logs to Loki at server via promtail\n      - TelemetryOptions__LokiUrl=https://promtail-push.${NODE_NAME:?"The variable NODE_NAME needs to be configured in the .env file."}.dataspace-node.com\n      - TelemetryOptions__LokiUser=tributech\n      - TelemetryOptions__LokiPassword=${LOKI_PROMTAIL_PW:?"The variable LOKI_PROMTAIL_PW needs to be configured in the .env file."}\n      - TelemetryOptions__ServiceName=${AGENT_NAME:?"The variable AGENT_NAME needs to be configured in the .env file."}-opcua-source\n      - TelemetryOptions__ServiceId=${AGENT_ID:?"The variable AGENT_ID needs to be configured in the .env file."}\n    networks:\n      - edge-net\n    # samples for mapping folders with certificates (see also https://github.com/OPCFoundation/UA-.NETStandard/blob/master/Docs/Certificates.md#certificate-stores)\n    # e.g. to have permanent application client certitifcate and/or to trust OPC-UA server certificate\n    volumes:\n      - ./volumes/opcua-source/own/private/:/app/certs/OPC Foundation/CertificateStores/MachineDefault/private # ApplicationCertificate (with private keys)\n      - ./volumes/opcua-source/own/certs/:/app/certs/OPC Foundation/CertificateStores/MachineDefault/certs/ # ApplicationCertificate\n      - ./volumes/opcua-source/trusted/certs/:/app/certs/OPC Foundation/CertificateStores/UA Applications/certs/ # TrustedPeerCertificates\n      - ./volumes/opcua-source/issuer/certs/:/app/certs/OPC Foundation/CertificateStores/UA Certificate Authorities/certs/ # TrustedIssuerCertificates\n      - ./volumes/opcua-source/rejected/certs/:/app/certs/OPC Foundation/CertificateStores/RejectedCertificates/certs/ # RejectedCertificateStore\n    restart: unless-stopped\n    logging:\n      driver: "json-file"\n      options:\n        max-size: "2m"\n        max-file: "5"\n\n  # OPC-UA server/simulated data generator\n  opcua-server:\n    image: ${DOCKER_REGISTRY-tributech.azurecr.io/}va_tt_srv_1.0:latest\n    networks:\n      - edge-net\n    # Expose ports for development and testing purposes\n    #ports:\n    #  - "4840:4840"\n    restart: unless-stopped\n    logging:\n      driver: "json-file"\n      options:\n        max-size: "2m"\n        max-file: "5"\n')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Startup all Tributech Edge and OPC UA services (will automatically retrieve the Docker images)."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can now continue with ",(0,r.kt)("a",{parentName:"p",href:"/next/setup/agent_companion#agent-companion-connect"},(0,r.kt)("strong",{parentName:"a"},"connecting to, linking & configuring"))," the Tributech Edge Agent and the ",(0,r.kt)("a",{parentName:"p",href:"/next/provide_data/iot/opc-ua"},(0,r.kt)("strong",{parentName:"a"},"OPC UA Source")),"."))))}h.isMDXComponent=!0},8688:function(e,t,n){t.Z=n.p+"assets/files/docker-compose.override-7a86165d90635fa8d23b20619cfa6a46.yml"},53142:function(e,t,n){t.Z=n.p+"assets/images/deploy-opcua-911ba509908066b386cea5df35c67703.png"}}]);