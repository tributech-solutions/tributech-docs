"use strict";(self.webpackChunktributech_docs=self.webpackChunktributech_docs||[]).push([[4445],{62874:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>g,default:()=>h,frontMatter:()=>p,metadata:()=>u,toc:()=>d});var o=n(58168),r=(n(96540),n(15680)),a=n(21386);const s='version: "3.3"\n\nservices:\n  # DSK agent\n  dsk-agent:\n    image: ${DOCKER_REGISTRY-tributech.azurecr.io/}dsk-agent:${AGENT_TAG:-latest}\n    depends_on:\n      - mosquitto-server\n    environment:\n      - Logging__LogLevel__Default=Information\n      - MqttOptions__MQTTHost=mosquitto-server\n      # general DSK edge agent configuration\n      - EdgeDeviceOptions__AgentID=${AGENT_ID:?"The variable AGENT_ID needs to be configured in the .env file."}\n      - EdgeDeviceOptions__ValueSink=Cloud\n      # push logs to Loki at server via promtail\n      - TelemetryOptions__LokiUrl=https://promtail-push.${NODE_NAME:?"The variable NODE_NAME needs to be configured in the .env file."}.dataspace-node.com\n      - TelemetryOptions__LokiUser=tributech\n      - TelemetryOptions__LokiPassword=${LOKI_PROMTAIL_PW:?"The variable LOKI_PROMTAIL_PW needs to be configured in the .env file."}\n      - TelemetryOptions__ServiceName=${AGENT_NAME:?"The variable AGENT_NAME needs to be configured in the .env file."}\n      - TelemetryOptions__ServiceId=${AGENT_ID:?"The variable AGENT_ID needs to be configured in the .env file."}\n    networks:\n      - edge-net\n    ports:\n      - "5000:80" # enable access to agent REST-API (e.g. for configuration with Agent-Companion)\n    volumes:\n      - ./volumes/dsk-agent/:/app/data # volume mapping for permanent storage of keys and datatwin file\n    restart: unless-stopped\n    logging:\n      driver: "json-file"\n      options:\n        max-size: "2m"\n        max-file: "5"\n\n  # MQTT broker/server\n  mosquitto-server:\n    image: eclipse-mosquitto:1.6\n    networks:\n      - edge-net\n    # Expose ports for development and testing purposes\n    #ports:\n    # - "127.0.0.1:1883:1883" # MQTT\n    # - "127.0.0.1:9001:9001" # web-socket\n    volumes:\n      - mosquitto_config:/mosquitto/config\n      - mosquitto_data:/mosquitto/data\n      - mosquitto_log:/mosquitto/log\n    restart: unless-stopped\n    logging:\n      driver: "json-file"\n      options:\n        max-size: "2m"\n        max-file: "5"\n\nnetworks:\n  edge-net:\n\nvolumes:\n  mosquitto_config:\n  mosquitto_data:\n  mosquitto_log:\n',i="AGENT_TAG=2.1.1\nSOURCE_TAG=2.1.0\nAGENT_ID=305ed1ad-46e0-4b1b-85c4-aa0268e612db\nAGENT_NAME=dev-agent-a1\nNODE_NAME=dev-node-a\nHUB_NAME=dev\nLOKI_PROMTAIL_PW=<YourSecurePassword123!>\n",p={title:"Edge Agent Setup",sidebar_position:2},g=void 0,u={unversionedId:"setup/agent/setup/docker-compose/docker-compose-setup",id:"version-2.0.0/setup/agent/setup/docker-compose/docker-compose-setup",title:"Edge Agent Setup",description:"In this section we provide an example configuration of a Tributech Edge Agent services running on Docker / Docker Compose runtime. We also provide a fully automated setup for Azure.",source:"@site/versioned_docs/version-2.0.0/setup/agent/setup/docker-compose/docker-compose-setup.mdx",sourceDirName:"setup/agent/setup/docker-compose",slug:"/setup/agent/setup/docker-compose/docker-compose-setup",permalink:"/2.0.0/setup/agent/setup/docker-compose/docker-compose-setup",draft:!1,editUrl:"https://github.com/tributech-solutions/tributech-dsk-docs/edit/master/versioned_docs/version-2.0.0/setup/agent/setup/docker-compose/docker-compose-setup.mdx",tags:[],version:"2.0.0",sidebarPosition:2,frontMatter:{title:"Edge Agent Setup",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Requirements",permalink:"/2.0.0/setup/agent/requirements"},next:{title:"Source Setup",permalink:"/2.0.0/setup/agent/setup/docker-compose/source-setup"}},c={},d=[{value:"Prerequisite",id:"prerequisite",level:2},{value:"Docker",id:"docker",level:3},{value:"Docker-Compose",id:"docker-compose",level:3},{value:"Setup the Tributech Edge Agent",id:"agent-manual-setup",level:2},{value:"Accessing the private Docker Registry",id:"private-docker-registry",level:3},{value:"Configure the Agent Environment",id:"configure-the-agent-environment",level:3},{value:"Configure Docker Compose",id:"configure-docker-compose",level:3},{value:"Run Edge services",id:"run-edge-services",level:2}],l={toc:d},m="wrapper";function h(e){let{components:t,...p}=e;return(0,r.yg)(m,(0,o.A)({},l,p,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"In this section we provide an example configuration of a Tributech Edge Agent services running on ",(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/agent/overview#docker-runtime"},(0,r.yg)("strong",{parentName:"a"},"Docker / Docker Compose"))," runtime. We also provide a fully automated setup for ",(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/agent/setup/azure/azure-setup"},(0,r.yg)("strong",{parentName:"a"},"Azure")),"."),(0,r.yg)("p",null,"To manage and handle Docker services of the Tributech Edge Agent (e.g. start/stop services, check logs of service) we provide some ",(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/agent/requirements#docker-compose-commands"},(0,r.yg)("strong",{parentName:"a"},"sample Docker-Compose commands")),"."),(0,r.yg)("h2",{id:"prerequisite"},"Prerequisite"),(0,r.yg)("p",null,"Recent Linux based system meeting our ",(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/agent/requirements"},(0,r.yg)("strong",{parentName:"a"},"requirements")),", e.g. our ",(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/agent/setup/azure/azure-setup"},(0,r.yg)("strong",{parentName:"a"},"automated setup"))," creates an Ubuntu 20.04 based Linux virtual machine on Azure.\nTo access the client secrets and some other information required in the next steps we require ",(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/agent/requirements#api-keys"},(0,r.yg)("strong",{parentName:"a"},"Api Keys")),"."),(0,r.yg)("h3",{id:"docker"},"Docker"),(0,r.yg)("p",null,"Install Docker based on the desired option from the ",(0,r.yg)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/"},(0,r.yg)("strong",{parentName:"a"},"official Docker documentation")),".\ne.g. for Ubuntu using the ",(0,r.yg)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/ubuntu/"},(0,r.yg)("strong",{parentName:"a"},"Official Docker Repository")),".\nOptional: Allow to ",(0,r.yg)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user"},(0,r.yg)("strong",{parentName:"a"},"manage Docker as non-root user")),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'sudo apt-get update\nsudo apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    lsb-release\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\necho \\\n"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\\n$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n\nsudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io\n')),(0,r.yg)("h3",{id:"docker-compose"},"Docker-Compose"),(0,r.yg)("p",null,"We recommend the installation of ",(0,r.yg)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/"},(0,r.yg)("strong",{parentName:"a"},"docker-compose"))," via package manager (e.g. Ubuntu ",(0,r.yg)("inlineCode",{parentName:"p"},"apt-get"),"):"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install docker-compose\n")),(0,r.yg)("h2",{id:"agent-manual-setup"},"Setup the Tributech Edge Agent"),(0,r.yg)("p",null,"The following steps describe the tasks required to get the main Edge services (",(0,r.yg)("inlineCode",{parentName:"p"},"Tributech-agent")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"mosquitto-server"),") up and running on a system."),(0,r.yg)("h3",{id:"private-docker-registry"},"Accessing the private Docker Registry"),(0,r.yg)("p",null,"In order to allow retrieval of Tributech Edge Docker images we need to login to the private Docker Registry using the Client ID and Client Secret from the ",(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/agent/requirements#api-keys"},(0,r.yg)("strong",{parentName:"a"},'"Docker Registry Token (DSK Edge)" area')),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"echo <Client Secret> | docker login --username <Client ID> --password-stdin tributech.azurecr.io\n")),(0,r.yg)("h3",{id:"configure-the-agent-environment"},"Configure the Agent Environment"),(0,r.yg)("p",null,"Copy and adapt the ",(0,r.yg)("a",{target:"_blank",href:n(24233).A},(0,r.yg)("inlineCode",{parentName:"p"},".env")),' environment configuration file.\nThe "LOKI_PROMTAIL_PW" can be retrieved from the Promtail (Loki push API)" password field in the ',(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/agent/requirements#api-keys"},(0,r.yg)("strong",{parentName:"a"},"DataSpace-Admin API Keys area")),". See the ",(0,r.yg)("a",{parentName:"p",href:"../azure/azure-setup#dsk-configuration"},(0,r.yg)("strong",{parentName:"a"},"automated setup"))," for detailed parameter description and ",(0,r.yg)("a",{parentName:"p",href:"https://docs.docker.com/compose/environment-variables/#the-env-file"},(0,r.yg)("strong",{parentName:"a"},"Docker"))," for general information about the ",(0,r.yg)("inlineCode",{parentName:"p"},".env")," file."),(0,r.yg)(a.A,{className:"language-plain",title:".env",mdxType:"CodeBlock"},i),(0,r.yg)("h3",{id:"configure-docker-compose"},"Configure Docker Compose"),(0,r.yg)("p",null,"Copy the ",(0,r.yg)("a",{target:"_blank",href:n(9768).A},(0,r.yg)("code",null,"docker-compose.yml"))," file into the folder containing the ",(0,r.yg)("inlineCode",{parentName:"p"},".env")," configuration file."),(0,r.yg)(a.A,{className:"language-yml",title:"docker-compose.yml",mdxType:"CodeBlock"},s),(0,r.yg)("h2",{id:"run-edge-services"},"Run Edge services"),(0,r.yg)("p",null,"Startup the Tributech Edge services (will automatically retrieve the Docker images, if not check the ",(0,r.yg)("a",{parentName:"p",href:"#private-docker-registry"},(0,r.yg)("strong",{parentName:"a"},"Docker authentication")),"). To check the status or shutdown the services revisit ",(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/agent/requirements#docker-compose-commands"},(0,r.yg)("strong",{parentName:"a"},"Docker management commands")),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d\n")),(0,r.yg)("p",null,"You can now continue to link and configure the ",(0,r.yg)("a",{parentName:"p",href:"../../overview"},(0,r.yg)("strong",{parentName:"a"},"Tributech Edge Agent"))," to a\n",(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/node"},(0,r.yg)("strong",{parentName:"a"},"Tributech Node"))," with the help of the ",(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/agent_companion"},(0,r.yg)("strong",{parentName:"a"},"Tributech Agent Companion")),".\nIn Order to send data to the ",(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/node"},(0,r.yg)("strong",{parentName:"a"},"Tributech Node"))," a ",(0,r.yg)("a",{parentName:"p",href:"/2.0.0/setup/agent/setup/docker-compose/source-setup"},(0,r.yg)("strong",{parentName:"a"},"Source"))," must be connected to the agent."))}h.isMDXComponent=!0},24233:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"2b3e15924d55ed5e981ddf1b1024a4bf.env"},9768:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/files/docker-compose-62d5d842db45659e7a78574f5068aa24.yml"}}]);