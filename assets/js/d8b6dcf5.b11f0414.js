"use strict";(self.webpackChunktributech_docs=self.webpackChunktributech_docs||[]).push([[3831],{13223:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/node-source-opcua-add-stream-config-5ef1124d6fa72ec3a83378c205c0f0d7.png"},20992:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/node-source-opcua-add-config-674f84c4cd6fe7a7b47eb3d7b966faf7.png"},28943:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/node-source-opcua-add-47a8531e67202e9a5cb222c7a579413d.png"},63546:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/node-source-opcua-add-stream-9f1c6bca7965423317ae1a7fca347605.png"},65510:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/node-source-opcua-mock-data-graph-a7e1289e6f9e0e85f551a657b9550f71.png"},66855:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/node-agent-configure-7ae7cf405f48c53a50f626b64ce56f49.png"},98081:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>h,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>g});const r=JSON.parse('{"id":"tributech_agent/sources/opcua_source","title":"OPC-UA Source","description":"The Tributech OPC-UA Source allows to connect to an OPC Unified Architecture (UA) server and receive data.  The Tributech OPC-UA Source acts like a OPC-UA Client in a docker environment and enables the forwarding of the data to a Tributech Agent stream.","source":"@site/versioned_docs/version-3.6.0/tributech_agent/sources/opcua_source.mdx","sourceDirName":"tributech_agent/sources","slug":"/tributech_agent/sources/opcua_source","permalink":"/3.6.0/tributech_agent/sources/opcua_source","draft":false,"unlisted":false,"editUrl":"https://github.com/tributech-solutions/tributech-dsk-docs/edit/master/versioned_docs/version-3.6.0/tributech_agent/sources/opcua_source.mdx","tags":[],"version":"3.6.0","sidebarPosition":3,"frontMatter":{"title":"OPC-UA Source","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"ADS Source","permalink":"/3.6.0/tributech_agent/sources/ads_source"},"next":{"title":"Simulated Source","permalink":"/3.6.0/tributech_agent/sources/simulated_source"}}');var i=t(74848),o=t(28453),s=t(21028);const c='version: \'3.6\'\n\nservices:\n  source-opcua:\n    restart: unless-stopped\n    image: ${DOCKER_REGISTRY-tributech.azurecr.io/}tributech-source-opcua:${SOURCE_TAG:-latest}\n    environment:\n      - MqttOptions__MQTTHost=mosquitto-server-opcua\n      - Logging__LogLevel__Default=Debug\n      - Logging__LogLevel__ADSRouter=Error\n    networks:\n      - opcua-net\n    logging:\n      driver: "json-file"\n      options:\n        max-size: "2m"\n        max-file: "5"\n\n  tributech-agent-opcua:\n    image: ${DOCKER_REGISTRY-tributech.azurecr.io/}tributech-agent:${AGENT_TAG:-latest}\n    depends_on:\n      - mosquitto-server-opcua\n    environment:\n      - Logging__LogLevel__Default=Information\n      - MqttOptions__MQTTHost=mosquitto-server-opcua\n      # general DSK edge agent configuration\n      - EdgeDeviceOptions__AgentID=${AGENT_ID:?"The variable AGENT_ID needs to be configured in the .env file."}\n    networks:\n      - opcua-net\n    ports:\n      - "5000:80" # enable access to agent REST-API (e.g. for configuration with Agent-Companion)\n    volumes:\n      - ./volumes/opcua/agent:/app/data # volume mapping for permanent storage of keys and datatwin file\n    restart: unless-stopped\n    logging:\n      driver: "json-file"\n      options:\n        max-size: "2m"\n        max-file: "5"\n\n  mosquitto-server-opcua:\n    image: eclipse-mosquitto:${MQTT_TAG:-1.6}\n    restart: unless-stopped\n    networks:\n      - opcua-net\n\nnetworks:\n  opcua-net:\n    ipam:\n      config:\n        - subnet: 172.24.1.0/24\n',a="AGENT_TAG=3.6.1\nAGENT_ID=00000000-0000-0000-0000-000000000007\nSOURCE_TAG=3.6.0\n",d='version: "3.6"\n\nservices:\n  official-opcua-server:\n    image: ghcr.io/opcfoundation/uanetstandard/refserver:1.4.371.91\n    hostname: off_opcua_server\n    networks:\n      - opcua-net\n    volumes:\n      - ./volumes/opcua/mock-server:/root/.local/share/OPC Foundation\n    logging:\n      driver: "json-file"\n      options:\n        max-size: "2m"\n        max-file: "5"\n\nvolumes:\n   official_opcua:\n',l={title:"OPC-UA Source",sidebar_position:3},h=void 0,u={},g=[{value:"Setup",id:"setup",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Value Change Options",id:"value-change-options",level:3},{value:"Providing Data",id:"providing-data",level:2},{value:"Mock Server",id:"mock-server",level:3}];function p(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The Tributech OPC-UA Source allows to connect to an ",(0,i.jsx)(n.a,{href:"https://opcfoundation.org/about/opc-technologies/opc-ua/",children:(0,i.jsx)(n.strong,{children:"OPC Unified Architecture (UA)"})})," server and receive data.  The Tributech OPC-UA Source acts like a OPC-UA Client in a docker environment and enables the forwarding of the data to a Tributech Agent stream."]}),"\n",(0,i.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsxs)(n.p,{children:["The Tributech OPC-UA Source image can be started without any dependencies but will not be functional without a valid Twin Configuration or MessageBroker connect to the Tributech Agent. The TwinConfiguration can be provided via the Tributech Node (recommended) or MessageBroker (see ",(0,i.jsx)(n.a,{href:"../source_integration#twin-model",children:"Source Integration"}),"). The OPC-UA Source will automatically connect to the Tributech Agent if the Tributech Agent is running and correct MessageBroker settings are set. In the following part we will describe the setup of a Tributech OPC-UA Source:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Setup the ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"docker environment"})})," by creating a ",(0,i.jsx)(n.code,{children:".env"})," file with the following content and replace the placeholder values with your values:"]}),"\n"]}),"\n",(0,i.jsx)(s.A,{className:"language-plain",title:".env",children:a}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Setup the ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"docker-compose.yml"})})," file by creating a ",(0,i.jsx)(n.code,{children:"docker-compose.yml"})," file with the following content in the same folder as the  ",(0,i.jsx)(n.code,{children:".env"})," file:"]}),"\n"]}),"\n",(0,i.jsx)(s.A,{className:"language-yml",title:"docker-compose.yml",children:c}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["After setting up the Tributech OPC-UA Source we need to link it to the Tributech Node (see ",(0,i.jsx)(n.a,{href:"/3.6.0/tributech_agent/quickstart#link-agent",children:"QuickStart"}),") and configure the TwinConfiguration."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"&quot;Configure Agent",src:t(66855).A+"",width:"1909",height:"351"})}),"\n",(0,i.jsxs)(n.p,{children:["We can save the settings by clicking on the ",(0,i.jsx)(n.code,{children:"SAVE IN WORKSPACE"})," button in the bottom right corner and add a new OPC-UA Stream by right clicking on the OPC-UA Source entry:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"&quot;Add OPCUA Source",src:t(28943).A+"",width:"715",height:"807"})}),"\n",(0,i.jsxs)(n.p,{children:["In order to connect to the OPC-UA Server we need to configure the OPC-UA Server settings. The following table contains the description for each setting for our MockClient (later we will describe how to setup a ",(0,i.jsx)(n.a,{href:"#mock-server",children:"MockServer"})," if you don't have a real OPC-UA Server available, i.e. ",(0,i.jsx)(n.code,{children:"opc.tcp://off_opcua_server:62541/Quickstarts/ReferenceServer"}),"):"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"&quot;Add OPCUA Source config",src:t(20992).A+"",width:"1909",height:"740"})}),"\n",(0,i.jsxs)(n.p,{children:["Next we can add a new OPC-UA Stream by clicking on the ",(0,i.jsx)(n.code,{children:"Add Streams"})," and ",(0,i.jsx)(n.code,{children:"OPC UA Stream"}),":"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"&quot;Add OPCUA Source stream",src:t(63546).A+"",width:"670",height:"602"})}),"\n",(0,i.jsxs)(n.p,{children:["The OPC-UA Stream can be configured with the following settings (the Identifier is specific to the ",(0,i.jsx)(n.a,{href:"#mock-server",children:"MockServer"}),"):"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"&quot;Add OPCUA Source stream",src:t(13223).A+"",width:"2545",height:"1133"})}),"\n",(0,i.jsxs)(n.p,{children:["We can save the settings by clicking on the ",(0,i.jsx)(n.code,{children:"SAVE IN WORKSPACE"})," button in the bottom right corner and continue adding every Identifier we want to read from the OPC-UA Server."]}),"\n",(0,i.jsxs)(n.p,{children:["After all streams have been configured, we can apply the configuration to the Tributech Agent by clicking on the ",(0,i.jsx)(n.code,{children:"APPLY CONFIGURATION"})," button in the top right corner."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Without the MockServer Setup or a real OPC-UA Source we will not receive any data on the Tributech Node."})}),"\n",(0,i.jsx)(n.h3,{id:"value-change-options",children:"Value Change Options"}),"\n",(0,i.jsxs)(n.p,{children:["The basic handling of Value Change Options (VCO) can be found in ",(0,i.jsx)(n.a,{href:"/3.6.0/tributech_agent/source_integration",children:"Source Integration"}),". This section contains the concrete handling of the ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Step (Delta)"})})," for the simulated source. The following list contains the description for each supported ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Stream Data Encoding"})})," where ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"X"})})," represents the value for ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Step (Delta)"})}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Double"})}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Int32"})}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Long"})}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Float"})}),": defines the minimum difference between values to be submitted, the change is always compared to the last successful submitted value, e.g. if ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"X"})}),"= 3 if the double values 1, 2, 5, 8, 10, 11, 14 are received by the Tributech Source only 1, 5, 8, 11, 14 will be submitted."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Byte Array"})}),": will only be submitted if the current and last submitted value are not equal"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"String UTF 8"})}),": will only be submitted if the current and last submitted value are not equal"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Boolean"})}),": will only be submitted if the current and last submitted value are not equal"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"providing-data",children:"Providing Data"}),"\n",(0,i.jsxs)(n.p,{children:["If a OPC UA Server is used as a source, no specific settings are required, only the settings described in ",(0,i.jsx)(n.a,{href:"#configuration",children:"Configuration"}),". If no OPC UA Server is available the Tributech ADS Source can use a ",(0,i.jsx)(n.a,{href:"https://www.unified-automation.com/products/development-tools/uaexpert.html",children:"OPC-UA Demo Server"})," from Unified Automation to provide data to the Tributech ADS Source."]}),"\n",(0,i.jsx)(n.h3,{id:"mock-server",children:"Mock Server"}),"\n",(0,i.jsxs)(n.p,{children:["The following steps describe how to setup a MockServer with the ",(0,i.jsx)(n.a,{href:"https://www.unified-automation.com/products/development-tools/uaexpert.html",children:"OPC-UA Demo Server"})," from Unified Automation. The Mock Server can be started by downloading the ",(0,i.jsx)(n.code,{children:"docker-compose.override.yml"})," file into the same folder as the Tributech ADS source."]}),"\n",(0,i.jsx)(s.A,{className:"language-yml",title:"docker-compose.override.yml",children:d}),"\n",(0,i.jsx)(n.p,{children:"The Mock Server needs access to the same docker network as the Tributech OPC UA Source. The Mock Server will be started automatically when the Tributech ADS Source is started."}),"\n",(0,i.jsx)(n.p,{children:"The following table contains the description for each available Identifier path of the Mock Server:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Identifier"}),(0,i.jsx)(n.th,{children:"DataType"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ns=3;i=2822"})}),(0,i.jsx)(n.td,{children:"Boolean"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ns=3;i=2824"})}),(0,i.jsx)(n.td,{children:"Byte Array"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ns=3;i=2832"})}),(0,i.jsx)(n.td,{children:"Double"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ns=3;i=2831"})}),(0,i.jsx)(n.td,{children:"Float"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ns=3;i=2827"})}),(0,i.jsx)(n.td,{children:"Integer"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ns=3;i=2829"})}),(0,i.jsx)(n.td,{children:"Long"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ns=3;i=2833"})}),(0,i.jsx)(n.td,{children:"UTF8 String"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"&quot;Add OPCUA Mock Server data",src:t(65510).A+"",width:"1727",height:"785"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);